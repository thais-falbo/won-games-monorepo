services:
  db:
    container_name: db
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: ./apps/strapi/.env
    image: postgres:14.5-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - "5432:5432"
    networks:
      - strapi

  strapi:
    container_name: strapi
    build:
      context: .
      dockerfile: ./apps/strapi/Dockerfile
    env_file: ./apps/strapi/.env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: db
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./turbo.json:/opt/turbo.json
      - ./package.json:/opt/package.json
      - ./pnpm-lock.yaml:/opt/pnpm-lock.yaml
      - ./.env:/opt/app/.env
      - ./public/uploads:/opt/app/public/uploads
    networks:
      - strapi
    depends_on:
      - db

  strapiAdminer:
    container_name: strapiAdminer
    image: adminer
    restart: unless-stopped
    ports:
      - "9090:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    networks:
      - strapi
    depends_on:
      - db

volumes:
  strapi-data:

networks:
  strapi:
    name: Strapi
    driver: bridge
